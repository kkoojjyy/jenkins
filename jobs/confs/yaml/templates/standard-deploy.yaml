- job-template:
    name: 'deploy-to-{reponame}_{repotype}'
    project-type: workflow
    quiet-period: 0
    concurrent: true
    properties:
      - build-discarder:
          num-to-keep: 100
          artifact-num-to-keep: 100
    triggers:
      - gerrit:
          server-name: '{gerrit-server}'
          trigger-on:
            - change-merged-event
          escape-quotes: true
          projects:
            - project-compare-type: 'REG_EXP'
              project-pattern: '.*'
              branches:
                - branch-compare-type: 'REG_EXP'
                  branch-pattern: '.*'
          skip-vote:
            successful: true
            failed: true
            unstable: true
            notbuilt: true
          silent-start: true
          failure-message: >
            Failed to deploy built artifacts to the 'experimental' repo. The
            'infra' team was already notified.
          successful-message: >
            Built artifacts successfully deployed to the 'experimental' repo for
            OST testing.
          unstable-message: >
            One ore more 'build-artifacts' jobs failed. Artifacts will not be
            deployed to the 'experimental' repo.
          notbuilt-message: >
            No artifacts found for deploying to the 'experimental' repo. You
            will need to create some 'build-artifacts' jobs if you want to
            participate in the 'experimental' flow.
    dsl: !include-raw-escape: groovy-scripts/pipeline-loader.groovy

- job-template: &deploy-job-template
    name: 'deploy-to_{queue-name}_tested'
    properties:
      - throttle:
          max-per-node: 1
          max-total: 1
          option: project
      - build-discarder:
          days-to-keep: 14
          artifact-num-to-keep: 2
    parameters:
      - text:
          name: REPOMAN_SOURCES
          default: ''
          description: |
            List of newline-separated repoman sources to get packages to deploy
            from
    builders:
      - shell: |
          [[ "$REPOMAN_SOURCES" == "" ]] && exit 1
          queue_name="{queue-name}"
          # For 'ovirt-*' queues strip the 'ovirt-' prefix to be compatible
          # with directory naming scheme that included the oVirt release
          # version rather then the queue name
          (
              echo "repo-extra-dir:${{queue_name##ovirt-}}"
              echo "$REPOMAN_SOURCES"
          ) | ssh \
              -o StrictHostKeyChecking=no \
              "{deploy-user}@{deploy-host}"
    wrappers:
      - ssh-agent-credentials:
          users:
            - deploy-to-tested
    publishers:
      - email-infra
